<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://go.warwick.ac.uk/elab-schemas/filterstack"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
	targetNamespace="http://go.warwick.ac.uk/elab-schemas/filterstack"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans.xsd" />

	<xsd:element name="filter-stack">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
        Defines a ConfigurableFilterStack. Contains one or more mapping
        elements, which each contain: one or more filter elements; one
        or more url-pattern elements; and zero or more excluded-url-pattern
        elements.
      ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:sequence>
						<xsd:element ref="mapping" minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
					<xsd:attribute name="abstract" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
          			Defines this filter stack as abstract - it cannot be instantiated directly.
          		]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="parent" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
          			The name of the parent filter-stack definition.
          		]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="merge" default="default"
						type="defaultable-boolean">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
	Enables/disables merging for collections when using parent/child beans.
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="mapping">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="filter" minOccurs="0" maxOccurs="unbounded" />
				<xsd:element name="url-pattern" minOccurs="0" maxOccurs="unbounded"
					type="xsd:string" />
				<xsd:element name="excluded-url-pattern" minOccurs="0"
					maxOccurs="unbounded" type="xsd:string" />
			</xsd:sequence>
			<xsd:attribute name="name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Can be used to create one or more aliases illegal in an (XML) id.
	Multiple aliases can be separated by any number of spaces, commas,
	or semi-colons (or indeed any mixture of the three).
				]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="filter">
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="1">
				<xsd:element ref="beans:ref" />
			</xsd:choice>
			<xsd:attribute name="ref" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>

	<!-- simple internal types -->
	<xsd:simpleType name="defaultable-boolean">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="default" />
			<xsd:enumeration value="true" />
			<xsd:enumeration value="false" />
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>